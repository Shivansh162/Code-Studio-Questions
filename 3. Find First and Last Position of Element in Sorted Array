int FirstOcc(vector<int>&arr, int n, int k){
	int s=0;
	int e=n-1;
	int mid=s+(e-s)/2;
	int ans=-1;
	while(s<=e){
		if(k==arr[mid]){
			ans= mid;
			e=mid-1;
		}

		else if(k<arr[mid]){
			e=mid-1;
		}

		else if(k>arr[mid]){
			s=mid+1;
		}
		mid=s+ (e-s)/2;
	}
	return ans;

}
int LastOcc(vector<int>&arr, int n, int k){
    int s=0;
	int e=n-1;
	int mid=s+(e-s)/2;
	int ans=-1;
	while(s<=e){
		if(k==arr[mid]){
			ans= mid;
			s=mid+1;
		}

		else if(k<arr[mid]){
			e=mid-1;
		}

		else if(k>arr[mid]){
			s=mid+1;
		}
		mid=s+ (e-s)/2;
	}
	return ans;

}


pair<int, int> findFirstLastPosition(vector<int> &arr, int n, int k)
{
	pair <int, int> p;
	p.first=FirstOcc(arr, n, k);
	p.second=LastOcc(arr, n, k);

	return p;
}

